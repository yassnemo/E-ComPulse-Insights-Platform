{{- if .Values.syntheticGenerator.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.syntheticGenerator.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "ecompulse-platform.labels" . | nindent 4 }}
    app.kubernetes.io/component: data-ingestion
spec:
  replicas: {{ .Values.syntheticGenerator.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.syntheticGenerator.name }}
      {{- include "ecompulse-platform.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
      labels:
        app: {{ .Values.syntheticGenerator.name }}
        {{- include "ecompulse-platform.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: data-ingestion
    spec:
      {{- include "ecompulse-platform.podSecurityContext" . | nindent 6 }}
      serviceAccountName: {{ include "ecompulse-platform.serviceAccountName" . }}
      containers:
      - name: {{ .Values.syntheticGenerator.name }}
        {{- include "ecompulse-platform.securityContext" . | nindent 8 }}
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.syntheticGenerator.image.repository }}:{{ .Values.syntheticGenerator.image.tag }}"
        imagePullPolicy: {{ .Values.syntheticGenerator.image.pullPolicy }}
        ports:
        - name: metrics
          containerPort: 8080
          protocol: TCP
        env:
        - name: EVENTS_PER_MINUTE
          value: "{{ .Values.syntheticGenerator.config.eventsPerMinute }}"
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "{{ .Values.syntheticGenerator.config.kafkaBootstrapServers }}"
        - name: REDIS_URL
          value: "{{ .Values.syntheticGenerator.config.redisUrl }}"
        - name: PROMETHEUS_PORT
          value: "8080"
        - name: LOG_LEVEL
          value: "INFO"
        - name: ENVIRONMENT
          value: "{{ .Values.global.environment }}"
        {{- include "ecompulse-platform.resources" .Values.syntheticGenerator | nindent 8 }}
        livenessProbe:
          httpGet:
            path: /health
            port: metrics
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: metrics
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: config
        configMap:
          name: {{ .Values.syntheticGenerator.name }}-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
{{- if .Values.syntheticGenerator.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Values.syntheticGenerator.name }}-hpa
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "ecompulse-platform.labels" . | nindent 4 }}
    app.kubernetes.io/component: data-ingestion
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Values.syntheticGenerator.name }}
  minReplicas: {{ .Values.syntheticGenerator.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.syntheticGenerator.autoscaling.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.syntheticGenerator.autoscaling.targetCPUUtilizationPercentage }}
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.syntheticGenerator.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "ecompulse-platform.labels" . | nindent 4 }}
    app.kubernetes.io/component: data-ingestion
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app: {{ .Values.syntheticGenerator.name }}
    {{- include "ecompulse-platform.selectorLabels" . | nindent 4 }}
{{- end }}
